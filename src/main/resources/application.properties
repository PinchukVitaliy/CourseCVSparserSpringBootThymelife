# ===============================
# To See H2 Console in Browser:admin
# http://localhost:8080/h2-console
# Enabling H2 Console
# ===============================
#spring.h2.console.enabled=true
#spring.h2.console.path=/console/

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=admin
#spring.datasource.password=

# ===============================
#  DATA SOURCE
#
# Set here configurations for the database connection
# Connection url for the database "netgloo_blog"
# Username and password
# ===============================

spring.datasource.url=jdbc:mysql://localhost:3306/csvparserdb?useSll=false&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = root

# ==============================================================
#  Keep the connection alive if idle for a long time (needed in production)
# ==============================================================

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
#  Show or not log for each sql query
# ==============================================================

spring.jpa.show-sql = true

# ==============================================================
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# none - allows you to add data
# update - overwrites tables without data
# ==============================================================

spring.jpa.hibernate.ddl-auto = update

# ==============================================================
#  The SQL dialect makes Hibernate generate better SQL for the chosen database
#  Allows Hibernate to generate SQL optimized for a particular DBMS
# ==============================================================

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.name from Users u inner join User_Role ur on u.id = ur.User_id inner join Roles r on r.id = ur.Role_id  where u.email=?


# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always



# ===============================
# Upload files
# ===============================
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB

spring.freemaker.expose-request-attributes=true

avatar.path=src/main/resources/static/icons_users/
file.path=src/main/resources/static/files/

# ===============================
# SMTP / Mail
# ===============================
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.mail.host=smtp.ukr.net
spring.mail.username=pinchukvitaliy@ukr.net
spring.mail.password=****
spring.mail.port=465
spring.mail.protocol=smtps
mail.debug=true
